%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Create NIFTI files made by combining the NIFTIS of each ROI with a given
% value (here, the t-score of the LZ difference).
%
% Pedro Mediano, Jul 2020
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Set-up
mricro_path = '/vol/bitbucket/pam213/tools/MRIcroGL/';
ft_path = '/vol/bitbucket/pam213/tools/fieldtrip/';
addpath(ft_path);
ft_defaults;

mri = ft_read_mri([mricro_path, 'Resources/standard/mni152.nii.gz']);
aal = ft_read_atlas([ft_path, 'template/atlas/aal/ROI_MNI_V4.nii']);

cfg            = [];
cfg.parameter  = 'tissue';
cfg.interpmethod  = 'nearest';
aal  = ft_sourceinterpolate(cfg, aal , mri);

% data = readtable('../data/fig4/fig4_brain_to_heart_lme_order.csv');
data = readtable('../data/fig4/fig4_brain_topo.csv');
nb_roi = height(data);

var_names = data.Properties.VariableNames(2:end);

%% Begin iteration
for v=1:length(var_names)
  tmap = zeros(aal.dim);
  X = data(:, var_names{v}).Variables;
  for r=1:nb_roi
    lbl = data.Var1{r};
    idx = find(contains(aal.tissuelabel, lbl));

    % Add masks to aal struct
    mask = zeros(size(aal.tissue));
    for i=idx
      mask = mask | (aal.tissue == i);
    end

    tmap = tmap + X(r).*mask;

  end

  aal.tmap = tmap;

  ft_volumewrite(struct('parameter', 'tmap', 'filename', ['../data/fig4/', var_names{v}, '.nii.gz'], 'datatype', 'float'), aal);

end
